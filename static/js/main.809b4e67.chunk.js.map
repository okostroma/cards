{"version":3,"sources":["n1-main/m1-ui/u3-common/Button.module.css","n1-main/m1-ui/u3-common/Button.tsx","n1-main/m1-ui/u3-common/Input.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a2-registration/Registration.tsx","n1-main/m1-ui/u1-header/Header.tsx","n1-main/m1-ui/App.tsx","n1-main/m1-ui/u2-routes/routes.js","serviceWorker.ts","n1-main/m2-bll/LoginReducer.ts","n1-main/m2-bll/RegisterReducer.ts","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/u1-header/Header.module.css"],"names":["module","exports","Button","props","load","classAdd","type","classes","primary","danger","loading","alt","className","src","default","buttonName","Input","connect","state","login","registration","Header","header","to","App","params","path","component","Login","Registration","Boolean","window","location","hostname","match","initialState","LoginReducer","RegisterReducer","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.809b4e67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2jSKj\",\"primary\":\"Button_primary__1DPcd\",\"danger\":\"Button_danger__-kexo\",\"load\":\"Button_load__2ZywC\"};","import React from 'react';\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype OwnPropTypes = {\r\n    buttonName: string\r\n    type: string\r\n    loading: boolean\r\n}\r\n\r\n\r\nconst Button = (props: OwnPropTypes) => {\r\n    let classAdd = '';\r\n    if (props.type === 'primary' ) {\r\n        classAdd = classes.primary;\r\n    }\r\n    if (props.type === 'danger' ) {\r\n        classAdd = classes.danger;\r\n    }\r\n    let load;\r\n    if (props.loading) {\r\n        load = <img alt='loading' className={classes.load}\r\n                    src='https://upload.wikimedia.org/wikipedia/commons/b/b9/Youtube_loading_symbol_1_(wobbly).gif'/>\r\n    }\r\n\r\n    if (props.loading) {\r\n        classAdd = classes.primary;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className={classes.default + ' ' + classAdd}>{load} {props.buttonName}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Input = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                Login <input type='text'/>\r\n            </div>\r\n            <div>\r\n                Password <input type='password'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport {connect, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport Button from \"../../../n1-main/m1-ui/u3-common/Button\";\r\nimport Input from \"../../../n1-main/m1-ui/u3-common/Input\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    buttonName: string\r\n    type: string\r\n    loading: boolean\r\n}\r\n\r\nconst Login = (props: mapStateToPropsType) => {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Input/>\r\n            <Button loading={props.loading} type={props.type} buttonName={props.buttonName}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        buttonName: state.login.buttonName,\r\n        type: state.login.type[0],\r\n        loading: state.login.loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Login);","import React from 'react';\r\nimport Button from \"../../../n1-main/m1-ui/u3-common/Button\";\r\nimport {AppStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {connect} from \"react-redux\";\r\nimport Input from \"../../../n1-main/m1-ui/u3-common/Input\";\r\n\r\ntype mapStateToPropsType = {\r\n    buttonName: string\r\n    type: string\r\n    loading: boolean\r\n}\r\n\r\n\r\nconst Registration = (props: mapStateToPropsType) => {\r\n    return (\r\n        <div>\r\n            <Input/>\r\n            <Button loading={props.loading} type={props.type} buttonName={props.buttonName}/>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        buttonName: state.registration.buttonName,\r\n        type: state.login.type[0],\r\n        loading: state.login.loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Registration);","import React from 'react';\r\nimport classes from \"./Header.module.css\"\r\nimport {HashRouter, NavLink, Route} from \"react-router-dom\";\r\nimport Login from \"../../../n2-features/f1-auth/a1-login/Login\";\r\nimport Registration from \"../../../n2-features/f1-auth/a2-registration/Registration\";\r\n\r\n\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={classes.header}>\r\n           <NavLink to='/login'> Sign in </NavLink> |\r\n           <NavLink to='/registration'> Sign up </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Login from \"../../n2-features/f1-auth/a1-login/Login\";\nimport Registration from \"../../n2-features/f1-auth/a2-registration/Registration\";\nimport Header from \"./u1-header/Header\";\nimport {login, registration} from \"./u2-routes/routes\";\nimport Particles from 'react-particles-js';\n\nconst App = () => {\n    const particleOpts = {\n        \"particles\": {\n            \"number\": {\n                \"value\": 50,\n                \"density\": {\n                    \"enable\": true,\n                    \"value_area\": 800\n                }\n            },\n            \"color\": {\n                \"value\": \"#715858\"\n            },\n            \"line_linked\": {\n                \"enable\": true,\n                \"distance\": 150,\n                \"color\": \"#E6E6FA\",\n                \"opacity\": 0.4,\n                \"width\": 1\n            },\n            \"shape\": {\n                \"type\": \"circle\",\n                \"stroke\": {\n                    \"width\": 0,\n                    \"color\": \"#000000\"\n                },\n                \"polygon\": {\n                    \"nb_sides\": 5\n                },\n            },\n            \"size\": {\n                \"value\": 20,\n                \"random\": true,\n                \"anim\": {\n                    \"enable\": false,\n                    \"speed\": 40,\n                    \"size_min\": 0.1,\n                    \"sync\": false\n                }\n            },\"interactivity\": {\n                \"detect_on\": \"canvas\",\n                \"events\": {\n                    \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                    },\n                    \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"push\"\n                    },\n                    \"resize\": true\n                },\n                \"modes\": {\n                    \"grab\": {\n                        \"distance\": 400,\n                        \"line_linked\": {\n                            \"opacity\": 1\n                        }\n                    },\n                    \"bubble\": {\n                        \"distance\": 400,\n                        \"size\": 40,\n                        \"duration\": 2,\n                        \"opacity\": 8,\n                        \"speed\": 3\n                    },\n                    \"repulse\": {\n                        \"distance\": 200\n                    },\n                    \"push\": {\n                        \"particles_nb\": 4\n                    },\n                    \"remove\": {\n                        \"particles_nb\": 2\n                    }\n                },\n                \"move\": {\n                    \"enable\": true,\n                    \"speed\": 6,\n                    \"direction\": \"none\",\n                    \"random\": false,\n                    \"straight\": false,\n                    \"out_mode\": \"out\",\n                    \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 1200\n                    }\n                }\n            }\n        }}\n\n    return (\n        <div className='App'>\n            <HashRouter>\n                <Particles className='particles' params={particleOpts}/>\n                <Header/>\n                <Route path={login} component={Login}/>\n                <Route path={registration} component={Registration}/>\n\n\n                <div className='main'>\n                <span className='welcome'> Welcome to ANOX! </span>\n                <div>\n                    Study different things with us!\n                </div>\n            </div>\n\n\n            </HashRouter>\n        </div>\n\n\n    );\n}\n\nexport default App;\n","export const login = '/login';\r\nexport const registration = '/registration';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\ntype initialStateType = {\r\n    buttonName: string\r\n    type: Array<string>\r\n    loading: boolean\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    buttonName: 'Sign in',\r\n    type: ['primary', 'danger'],\r\n    loading: false\r\n}\r\n\r\nconst LoginReducer = (state: initialStateType = initialState, action : any) => {\r\n    return state;\r\n}\r\n\r\nexport default LoginReducer;","type initialStateType = {\r\n    buttonName: string\r\n    type: Array<string>\r\n    loading: boolean\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    buttonName: 'Sign up',\r\n    type: ['primary', 'danger'],\r\n    loading: false\r\n}\r\n\r\nconst RegisterReducer = (state: initialStateType = initialState, action : any) => {\r\n    return state;\r\n}\r\n\r\nexport default RegisterReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport LoginReducer from \"./LoginReducer\";\r\nimport RegisterReducer from \"./RegisterReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: LoginReducer,\r\n    registration: RegisterReducer\r\n})\r\n\r\n\r\nconst store = createStore(reducers);\r\n\r\n\r\ntype RootReducersType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducersType>;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./n1-main/m2-bll/store\";\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Bcrf\"};"],"sourceRoot":""}