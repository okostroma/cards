{"version":3,"sources":["n2-features/f1-auth/a4-profile/user.png","n2-features/f1-auth/a4-profile/profile.module.css","n1-main/m1-ui/u3-common/c2-button/Button.module.css","n1-main/m1-ui/u3-common/c2-button/Button.tsx","n1-main/m1-ui/u3-common/c3-input/Input.tsx","n2-features/f1-auth/a1-login/l3-dal/loginAPI.ts","n2-features/f1-auth/a1-login/l2-bll/LoginReducer.ts","n2-features/f1-auth/a1-login/l1-ui/Login.tsx","n1-main/m1-ui/u2-routes/routes.js","n1-main/m3-dal/api.ts","n1-main/m2-bll/RegisterReducer.ts","n2-features/f1-auth/a2-registration/Registration.tsx","n1-main/m1-ui/u1-header/Header.tsx","n2-features/f1-auth/a3-restorePassword/RestorePassword.tsx","n2-features/f1-auth/a4-profile/profile.tsx","n1-main/m1-ui/App.tsx","serviceWorker.ts","n1-main/m2-bll/RestorePasswordReducer.ts","n1-main/m2-bll/ProfileReducer.ts","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/u1-header/Header.module.css"],"names":["module","exports","Button","props","load","classAdd","buttonType","classes","primary","danger","loading","alt","className","src","default","onClick","disabled","buttonName","Input","onChange","type","inputType","value","instance","axios","create","baseURL","loginAPI","get","email","password","rememberMe","post","then","res","loginInitialState","isAuth","success","error","LoginActions","LoginReducer","state","action","connect","login","useState","setEmail","setPassword","setRememberMe","setEmailCallback","useCallback","e","currentTarget","setPasswordCallback","setRememberMeCallback","checked","dispatch","useDispatch","signInCallback","a","data","resultCode","singIn","useEffect","to","authAPI","initialState","serverAnswer","isFetching","isUserAuth","setServerAnswer","RegisterReducer","registration","registrationThunk","isAuthByLogin","isAuthByRestore","restore","isAuthByRegistration","header","userId","profile","userName","avatar","user","params","path","component","Login","Registration","RestorePassword","Profile","Boolean","window","location","hostname","match","RestorePasswordReducer","ProfileReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.606fb7fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"profile_avatar__ikWHI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__3Uriw\",\"primary\":\"Button_primary__8KPpr\",\"danger\":\"Button_danger__14GBt\",\"load\":\"Button_load__1LC-H\"};","import React from 'react';\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype OwnPropTypes = {\r\n    buttonName: string\r\n    buttonType: string\r\n    loading: boolean\r\n    onClick: () => void\r\n}\r\n\r\n\r\nconst Button = (props: OwnPropTypes) => {\r\n    let classAdd = '';\r\n    if (props.buttonType === 'primary' ) {\r\n        classAdd = classes.primary;\r\n    }\r\n    if (props.buttonType === 'danger' ) {\r\n        classAdd = classes.danger;\r\n    }\r\n    let load;\r\n    if (props.loading) {\r\n        load = <img alt='loading' className={classes.load}\r\n                    src='https://upload.wikimedia.org/wikipedia/commons/b/b9/Youtube_loading_symbol_1_(wobbly).gif'/>\r\n    }\r\n\r\n    if (props.loading) {\r\n        classAdd = classes.primary;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className={classes.default + ' ' + classAdd} onClick={props.onClick} disabled={props.loading}>{load} {props.buttonName}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, {ChangeEvent} from 'react';\r\n\r\n\r\ntype OwnPropsType = {\r\n    inputType: string\r\n    value?: string\r\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\n\r\n\r\nconst Input = (props: OwnPropsType) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n               <input onChange={props.onChange} type={props.inputType} value={props.value}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/1.0/'\r\n})\r\n\r\ntype CommonApiType<T> = {\r\n    data: T\r\n}\r\n\r\nexport const loginAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth`);\r\n    },\r\n    singIn (email: string, password: string, rememberMe: boolean)  {\r\n        return  instance.post('auth/login', {email, password, rememberMe}).then(res => res)\r\n    }\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {commonActionsType} from \"../../../../n1-main/m2-bll/actions\";\r\nimport {AppStateType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {loginAPI} from \"../l3-dal/loginAPI\";\r\n\r\ntype loginStateType = {\r\n    buttonName: string\r\n    buttonType: Array<string>\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n    success: boolean\r\n    error: string\r\n}\r\n\r\nconst loginInitialState: loginStateType = {\r\n    buttonName: 'Sign in',\r\n    buttonType: ['primary', 'danger'],\r\n    loading: false,\r\n    inputType: ['text', 'password', 'checkbox'],\r\n    isAuth: false,\r\n    success: false,\r\n    error: '',\r\n}\r\nconst LoginActions = {\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'login/SET_SUCCESS',\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: 'login/SET_ERROR',\r\n        error,\r\n    } as const),\r\n    setLoading: (loading: boolean) => ({\r\n        type: 'login/SET_LOADING',\r\n        loading,\r\n    } as const),\r\n}\r\n\r\ntype LoginActionsType = commonActionsType<typeof LoginActions>;\r\n\r\nconst LoginReducer = (state: loginStateType = loginInitialState, action: LoginActionsType): loginStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n                loading: false,\r\n                error: ''\r\n            }\r\n        }\r\n        case 'login/SET_ERROR': {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case 'login/SET_LOADING': {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default LoginReducer\r\n\r\nexport type ThunkType = ThunkAction<void, AppStateType, unknown, LoginActionsType>\r\nexport type ThunkDispatchType = ThunkDispatch<AppStateType, {}, LoginActionsType>\r\n\r\nexport const singIn = (email: string, password: string, rememberMe: boolean): ThunkType =>\r\n    async (dispatch: ThunkDispatchType) => {\r\n    const res = await loginAPI.singIn(email, password, rememberMe)\r\n        if (res.data.resultCode === 0){\r\n            dispatch(LoginActions.setSuccess(true))\r\n        }else {\r\n            dispatch(LoginActions.setError(res.data.error));\r\n        }\r\n};\r\nexport const getAuth = (): ThunkType =>\r\n    async (dispatch: ThunkDispatchType) => {\r\n    const res = await loginAPI.getAuth()\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(LoginActions.setSuccess(true))\r\n        }\r\n};","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport {AppStateType} from \"../../../../n1-main/m2-bll/store\";\r\nimport Button from \"../../../../n1-main/m1-ui/u3-common/c2-button/Button\";\r\nimport Input from \"../../../../n1-main/m1-ui/u3-common/c3-input/Input\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {profile, restore} from \"../../../../n1-main/m1-ui/u2-routes/routes\";\r\nimport {getAuth, singIn} from \"../l2-bll/LoginReducer\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    buttonName: string\r\n    buttonType: string\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n}\r\n\r\nconst Login = (props: mapStateToPropsType) => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(true)\r\n\r\n    const setEmailCallback = useCallback((e: ChangeEvent<HTMLInputElement>):void => setEmail(e.currentTarget.value), [setEmail]);\r\n    const setPasswordCallback = useCallback((e: ChangeEvent<HTMLInputElement>):void => setPassword(e.currentTarget.value), [setPassword]);\r\n    const setRememberMeCallback = useCallback((e: ChangeEvent<HTMLInputElement>):void => setRememberMe(e.currentTarget.checked), [setRememberMe]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const signInCallback = useCallback(\r\n        () => dispatch(singIn(email, password, rememberMe)),\r\n        [email, password, dispatch]\r\n    );\r\n    useEffect(\r\n        () =>{\r\n            dispatch(getAuth())\r\n        }, []\r\n    );\r\n\r\n\r\n    const onClick = () => {\r\n\r\n    }\r\n    const onChange = () => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Login <Input onChange={setEmailCallback} value={props.value} inputType={props.inputType[0]}/>\r\n            </div>\r\n            <div>\r\n                Password <Input onChange={setPasswordCallback} value={props.value} inputType={props.inputType[1]}/>\r\n            </div>\r\n            <div>\r\n                Remember me <Input onChange={setRememberMeCallback} value={props.value} inputType={props.inputType[2]}/>\r\n            </div>\r\n            <div>\r\n                <NavLink to={restore}>Forgot password?</NavLink>\r\n            </div>\r\n\r\n            {props.isAuth\r\n                ? <NavLink to={profile}><Button onClick={onClick}\r\n                                                          loading={props.loading}\r\n                                                          buttonType={props.buttonType} buttonName={props.buttonName}/></NavLink>\r\n                :<Button onClick={signInCallback} loading={props.loading}\r\n                        buttonType={props.buttonType} buttonName={props.buttonName}/>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        buttonName: state.login.buttonName,\r\n        buttonType: state.login.buttonType[0],\r\n        loading: state.login.loading,\r\n        inputType: state.login.inputType,\r\n        value: state.login.value,\r\n        isAuth: state.login.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Login);","export const login = '/login';\r\nexport const registration = '/registration';\r\nexport const restore = '/restorePassword';\r\nexport const profile = '/profile';","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/1.0/'\r\n})\r\n\r\n\r\ntype RegistrationType = {\r\n    addedUser: {\r\n        email: string,\r\n        isAdmin: boolean,\r\n        __v: number,\r\n        _id: string\r\n    },\r\n    success: boolean\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    registration(email: string, password: string) {\r\n        return instance.post<RegistrationType>('auth/register', {\r\n                email,\r\n                password\r\n            }\r\n        ).then(res => res.data)\r\n    }\r\n}","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./store\";\r\nimport {authAPI} from \"../m3-dal/api\";\r\n\r\ntype initialStateType = {\r\n    buttonName: string\r\n    buttonType: Array<string>\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n    serverAnswer: string\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    buttonName: 'Sign up',\r\n    buttonType: ['primary', 'danger'],\r\n    loading: false,\r\n    inputType: ['text', 'password'],\r\n    isAuth: false,\r\n    serverAnswer: ''\r\n}\r\n\r\nconst IS_FETCHING = 'IS_FETCHING';\r\nconst IS_USER_AUTH = 'IS_USER_AUTH';\r\nconst SET_SERVER_ANSWER = 'SET_SERVER_ANSWER';\r\n\r\n\r\n\r\nconst RegisterReducer = (state: initialStateType = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case IS_FETCHING: {\r\n            return {\r\n                ...state, loading: action.loading\r\n            }\r\n        }\r\n        case IS_USER_AUTH : {\r\n            return {\r\n                ...state, isAuth: action.isAuth\r\n            }\r\n        }\r\n        case SET_SERVER_ANSWER : {\r\n            return {\r\n                ...state, serverAnswer: action.serverAnswer\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\ntype ActionType = isFetchingType | isUserAuthType | setServerAnswerType;\r\n\r\ntype isFetchingType = {\r\n    type: typeof IS_FETCHING,\r\n    loading: boolean\r\n}\r\nexport const isFetching = (loading: boolean): isFetchingType => ({type: IS_FETCHING, loading});\r\n\r\ntype isUserAuthType = {\r\n    type: typeof IS_USER_AUTH,\r\n    isAuth: boolean\r\n}\r\nexport const isUserAuth = (isAuth: boolean): isUserAuthType => ({type: IS_USER_AUTH, isAuth});\r\n\r\ntype setServerAnswerType = {\r\n    type: typeof SET_SERVER_ANSWER,\r\n    serverAnswer: string\r\n}\r\n\r\nexport const setServerAnswer = (serverAnswer: string): setServerAnswerType => ({type: SET_SERVER_ANSWER, serverAnswer});\r\n\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionType>\r\ntype DispatchThunk = ThunkDispatch<AppStateType, unknown, ActionType>\r\n\r\n\r\nexport const registrationThunk = (email: string, password: string): ThunkType => async (dispatch: DispatchThunk) => {\r\n    dispatch(isFetching(true));\r\n    let response = await authAPI.registration(email, password);\r\n    if (response.success === true) {\r\n        dispatch(isFetching(false));\r\n        dispatch(isUserAuth(true));\r\n        dispatch(setServerAnswer('ok'))\r\n    } else {\r\n        dispatch(setServerAnswer('some error'))\r\n        dispatch(isFetching(false));\r\n    }\r\n}\r\n\r\n\r\nexport default RegisterReducer;","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport Button from \"../../../n1-main/m1-ui/u3-common/c2-button/Button\";\r\nimport {AppStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {connect} from \"react-redux\";\r\nimport Input from \"../../../n1-main/m1-ui/u3-common/c3-input/Input\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {profile} from \"../../../n1-main/m1-ui/u2-routes/routes\";\r\nimport {isFetching, isUserAuth, registrationThunk} from \"../../../n1-main/m2-bll/RegisterReducer\";\r\nimport {authAPI} from \"../../../n1-main/m3-dal/api\";\r\n\r\ntype MapStateToPropsType = {\r\n    buttonName: string\r\n    buttonType: string\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n    serverAnswer: string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    isFetching: (loading: boolean) => void\r\n    isUserAuth: (isAuth: boolean) => void\r\n    registrationThunk: (email: string, password: string) => void\r\n}\r\n\r\n\r\nconst Registration = (props: MapStateToPropsType & MapDispatchToPropsType) => {\r\n\r\n    const [email, setEmail] = useState('oxa@gmail.com')\r\n    const [password, setPassword] = useState('!12345!')\r\n\r\n    const onClick = () => {\r\n        // props.isFetching(true);\r\n\r\n    }\r\n    const setEmailCallback = useCallback((e: ChangeEvent<HTMLInputElement>): void => {\r\n        setEmail(e.currentTarget.value)\r\n    }, [setEmail])\r\n\r\n    const setPasswordCallback = useCallback((e: ChangeEvent<HTMLInputElement>): void => {\r\n        setPassword(e.currentTarget.value)\r\n    }, [setPassword])\r\n\r\n    const postUserData = () => {\r\n\r\n        props.registrationThunk(email, password);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Your e-mail <Input onChange={setEmailCallback} value={email} inputType={props.inputType[0]}/>\r\n            </div>\r\n            <div>\r\n                Your password <Input onChange={setPasswordCallback} value={password} inputType={props.inputType[1]}/>\r\n            </div>\r\n\r\n            {props.serverAnswer === 'some error' && <span>{props.serverAnswer}</span>}\r\n\r\n            {props.isAuth ? <NavLink to={profile}><Button  onClick={onClick} loading={props.loading}\r\n                                                           buttonType={props.buttonType} buttonName={props.buttonName}/></NavLink> :\r\n                <Button onClick={postUserData} loading={props.loading}\r\n                         buttonType={props.buttonType} buttonName={props.buttonName}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        buttonName: state.registration.buttonName,\r\n        buttonType: state.registration.buttonType[0],\r\n        loading: state.registration.loading,\r\n        inputType: state.registration.inputType,\r\n        value: state.registration.value,\r\n        isAuth: state.registration.isAuth,\r\n        serverAnswer: state.registration.serverAnswer\r\n    }\r\n}\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps,\r\n    {isFetching, isUserAuth, registrationThunk})(Registration);","import React from 'react';\r\nimport classes from \"./Header.module.css\"\r\nimport {HashRouter, NavLink, Route} from \"react-router-dom\";\r\nimport Login from \"../../../n2-features/f1-auth/a1-login/l1-ui/Login\";\r\nimport Registration from \"../../../n2-features/f1-auth/a2-registration/Registration\";\r\nimport {login, profile, registration} from \"../u2-routes/routes\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../m2-bll/store\";\r\nimport Profile from \"../../../n2-features/f1-auth/a4-profile/profile\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuthByLogin: boolean\r\n    isAuthByRestore: boolean\r\n    isAuthByRegistration: boolean\r\n}\r\n\r\n\r\nconst Header = (props: MapStateToPropsType) => {\r\n\r\n\r\n    const isAuth = props.isAuthByLogin || props.isAuthByRegistration || props.isAuthByRestore;\r\n    return (<div>\r\n            {!isAuth && <div className={classes.header}>\r\n\r\n                <NavLink to={login}> Sign in </NavLink> |\r\n                <NavLink to={registration}> Sign up </NavLink>\r\n            </div>\r\n            }\r\n\r\n            {/*{isAuth && <Profile/> }*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuthByLogin: state.login.isAuth,\r\n        isAuthByRestore: state.restore.isAuth,\r\n        isAuthByRegistration: state.registration.isAuth\r\n    }\r\n}\r\n\r\nexport default connect<MapStateToPropsType, {}, {}, AppStateType>(mapStateToProps, {})(Header);","import React from 'react';\r\nimport Button from \"../../../n1-main/m1-ui/u3-common/c2-button/Button\";\r\nimport {AppStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {connect} from \"react-redux\";\r\nimport Input from \"../../../n1-main/m1-ui/u3-common/c3-input/Input\";\r\nimport {login} from \"../../../n1-main/m1-ui/u2-routes/routes\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    buttonName: string\r\n    buttonType: string\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst RestorePassword = (props: mapStateToPropsType) => {\r\n    const onClick = () => {\r\n\r\n    }\r\n\r\n    const onChange =() => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Enter your e-mail <Input onChange={onChange} value={props.value} inputType={props.inputType[0]}/>\r\n\r\n           <NavLink to={login}> <Button onClick={onClick} loading={props.loading}\r\n                                          buttonType={props.buttonType} buttonName={props.buttonName}/></NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        buttonName: state.restore.buttonName,\r\n        buttonType: state.restore.buttonType[0],\r\n        loading: state.restore.loading,\r\n        inputType: state.restore.inputType,\r\n        value: state.restore.value,\r\n        isAuth: state.restore.isAuth\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(RestorePassword);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport user from './user.png';\r\nimport classes from \"./profile.module.css\";\r\n\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    userId: string\r\n    userName: string\r\n}\r\n\r\nconst Profile = (props: MapStateToPropsType) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <img className={classes.avatar} alt='user' src={user}/> {props.userName}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        userId: state.profile.userId,\r\n        userName: state.profile.userName\r\n\r\n    }\r\n}\r\n\r\nexport default connect<MapStateToPropsType, {}, {}, AppStateType>(mapStateToProps, {})(Profile);","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport Login from \"../../n2-features/f1-auth/a1-login/l1-ui/Login\";\r\nimport Registration from \"../../n2-features/f1-auth/a2-registration/Registration\";\r\nimport Header from \"./u1-header/Header\";\r\nimport {login, profile, registration, restore} from \"./u2-routes/routes\";\r\nimport Particles from 'react-particles-js';\r\nimport RestorePassword from \"../../n2-features/f1-auth/a3-restorePassword/RestorePassword\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../m2-bll/store\";\r\nimport Profile from \"../../n2-features/f1-auth/a4-profile/profile\";\r\n\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuthByLogin: boolean\r\n    isAuthByRestore: boolean\r\n    isAuthByRegistration: boolean\r\n}\r\n\r\nconst App = (props: MapStateToPropsType) => {\r\n    const particleOpts = {\r\n        \"particles\": {\r\n            \"number\": {\r\n                \"value\": 50,\r\n                \"density\": {\r\n                    \"enable\": true,\r\n                    \"value_area\": 800\r\n                }\r\n            },\r\n            \"color\": {\r\n                \"value\": \"#715858\"\r\n            },\r\n            \"line_linked\": {\r\n                \"enable\": true,\r\n                \"distance\": 150,\r\n                \"color\": \"#E6E6FA\",\r\n                \"opacity\": 0.4,\r\n                \"width\": 1\r\n            },\r\n            \"shape\": {\r\n                \"type\": \"circle\",\r\n                \"stroke\": {\r\n                    \"width\": 0,\r\n                    \"color\": \"#000000\"\r\n                },\r\n                \"polygon\": {\r\n                    \"nb_sides\": 5\r\n                },\r\n            },\r\n            \"size\": {\r\n                \"value\": 20,\r\n                \"random\": true,\r\n                \"anim\": {\r\n                    \"enable\": false,\r\n                    \"speed\": 40,\r\n                    \"size_min\": 0.1,\r\n                    \"sync\": false\r\n                }\r\n            }, \"interactivity\": {\r\n                \"detect_on\": \"canvas\",\r\n                \"events\": {\r\n                    \"onhover\": {\r\n                        \"enable\": true,\r\n                        \"mode\": \"repulse\"\r\n                    },\r\n                    \"onclick\": {\r\n                        \"enable\": true,\r\n                        \"mode\": \"push\"\r\n                    },\r\n                    \"resize\": true\r\n                },\r\n                \"modes\": {\r\n                    \"grab\": {\r\n                        \"distance\": 400,\r\n                        \"line_linked\": {\r\n                            \"opacity\": 1\r\n                        }\r\n                    },\r\n                    \"bubble\": {\r\n                        \"distance\": 400,\r\n                        \"size\": 40,\r\n                        \"duration\": 2,\r\n                        \"opacity\": 8,\r\n                        \"speed\": 3\r\n                    },\r\n                    \"repulse\": {\r\n                        \"distance\": 200\r\n                    },\r\n                    \"push\": {\r\n                        \"particles_nb\": 4\r\n                    },\r\n                    \"remove\": {\r\n                        \"particles_nb\": 2\r\n                    }\r\n                },\r\n                \"move\": {\r\n                    \"enable\": true,\r\n                    \"speed\": 6,\r\n                    \"direction\": \"none\",\r\n                    \"random\": false,\r\n                    \"straight\": false,\r\n                    \"out_mode\": \"out\",\r\n                    \"attract\": {\r\n                        \"enable\": false,\r\n                        \"rotateX\": 600,\r\n                        \"rotateY\": 1200\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const isAuth = props.isAuthByLogin || props.isAuthByRegistration || props.isAuthByRestore;\r\n\r\n    return (\r\n        <div className='App'>\r\n            <HashRouter>\r\n                <Particles className='particles' params={particleOpts}/>\r\n                <Header/>\r\n                <Route path={login} component={Login}/>\r\n                <Route path={registration} component={Registration}/>\r\n                <Route path={restore} component={RestorePassword}/>\r\n                <Route path={profile} component={Profile}/>\r\n\r\n\r\n                {!isAuth &&\r\n                <div className='main'>\r\n                    <span className='welcome'> Welcome to ANOX! </span>\r\n                    <div>\r\n                        Study different things with us!\r\n                    </div>\r\n                </div>\r\n                }\r\n\r\n\r\n\r\n\r\n            </HashRouter>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuthByLogin: state.login.isAuth,\r\n        isAuthByRestore: state.restore.isAuth,\r\n        isAuthByRegistration: state.registration.isAuth\r\n\r\n    }\r\n}\r\n\r\nexport default connect<MapStateToPropsType, {}, {}, AppStateType>(mapStateToProps, {})(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\ntype initialStateType = {\r\n    buttonName: string\r\n    buttonType: Array<string>\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    buttonName: 'Send password',\r\n    buttonType: ['primary', 'danger'],\r\n    loading: false,\r\n    inputType: ['text', 'password'],\r\n    isAuth: false\r\n}\r\n\r\nconst RestorePasswordReducer = (state: initialStateType = initialState, action : any) => {\r\n    return state;\r\n}\r\n\r\nexport default RestorePasswordReducer;","\r\ntype initialStateType = {\r\n    userId: string\r\n    userName: string\r\n\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    userId: '1',\r\n    userName: 'Oxana'\r\n}\r\n\r\nconst ProfileReducer = (state: initialStateType = initialState, action : any) => {\r\n    return state;\r\n}\r\n\r\nexport default ProfileReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport LoginReducer from \"../../n2-features/f1-auth/a1-login/l2-bll/LoginReducer\";\r\nimport RegisterReducer from \"./RegisterReducer\";\r\nimport RestorePasswordReducer from \"./RestorePasswordReducer\";\r\nimport ProfileReducer from \"./ProfileReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    login: LoginReducer,\r\n    registration: RegisterReducer,\r\n    restore: RestorePasswordReducer,\r\n    profile: ProfileReducer\r\n})\r\n\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\n\r\ntype RootReducersType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducersType>;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./n1-main/m2-bll/store\";\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Bcrf\"};"],"sourceRoot":""}