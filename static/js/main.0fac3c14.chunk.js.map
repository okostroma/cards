{"version":3,"sources":["n1-main/m1-ui/u3-common/Button.module.css","n1-main/m1-ui/u3-common/Button.tsx","n1-main/m1-ui/u3-common/Input.tsx","n2-features/f1-auth/a1-login/Login.tsx","n1-main/m1-ui/u2-routes/routes.js","n2-features/f1-auth/a2-registration/Registration.tsx","n1-main/m1-ui/u1-header/Header.tsx","n2-features/f1-auth/a3-restorePassword/RestorePassword.tsx","n2-features/f1-auth/a4-profile/profile.tsx","n1-main/m1-ui/App.tsx","serviceWorker.ts","n1-main/m2-bll/LoginReducer.ts","n1-main/m2-bll/RegisterReducer.ts","n1-main/m2-bll/RestorePasswordReducer.ts","n1-main/m2-bll/ProfileReducer.ts","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/u1-header/Header.module.css","n2-features/f1-auth/a4-profile/user.png","n2-features/f1-auth/a4-profile/profile.module.css"],"names":["module","exports","Button","props","load","classAdd","buttonType","classes","primary","danger","loading","alt","className","src","default","onClick","buttonName","Input","onChange","type","inputType","value","connect","state","login","isAuth","to","registration","isAuthByLogin","isAuthByRestore","restore","isAuthByRegistration","header","userId","profile","userName","avatar","user","params","path","component","Login","Registration","RestorePassword","Profile","Boolean","window","location","hostname","match","initialState","LoginReducer","RegisterReducer","RestorePasswordReducer","ProfileReducer","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0fac3c14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2jSKj\",\"primary\":\"Button_primary__1DPcd\",\"danger\":\"Button_danger__-kexo\",\"load\":\"Button_load__2ZywC\"};","import React from 'react';\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype OwnPropTypes = {\r\n    buttonName: string\r\n    buttonType: string\r\n    loading: boolean\r\n    onClick: () => void\r\n}\r\n\r\n\r\nconst Button = (props: OwnPropTypes) => {\r\n    let classAdd = '';\r\n    if (props.buttonType === 'primary' ) {\r\n        classAdd = classes.primary;\r\n    }\r\n    if (props.buttonType === 'danger' ) {\r\n        classAdd = classes.danger;\r\n    }\r\n    let load;\r\n    if (props.loading) {\r\n        load = <img alt='loading' className={classes.load}\r\n                    src='https://upload.wikimedia.org/wikipedia/commons/b/b9/Youtube_loading_symbol_1_(wobbly).gif'/>\r\n    }\r\n\r\n    if (props.loading) {\r\n        classAdd = classes.primary;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className={classes.default + ' ' + classAdd} onClick={props.onClick}>{load} {props.buttonName}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\n\r\ntype OwnPropsType = {\r\n    inputType: string\r\n    value?: string\r\n    onChange: () => void\r\n}\r\n\r\n\r\n\r\nconst Input = (props: OwnPropsType) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n               <input onChange={props.onChange} type={props.inputType} value={props.value}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport {connect, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport Button from \"../../../n1-main/m1-ui/u3-common/Button\";\r\nimport Input from \"../../../n1-main/m1-ui/u3-common/Input\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {profile, restore} from \"../../../n1-main/m1-ui/u2-routes/routes\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    buttonName: string\r\n    buttonType: string\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n}\r\n\r\nconst Login = (props: mapStateToPropsType) => {\r\n    const onClick = () => {\r\n\r\n    }\r\n    const onChange =() => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Login <Input onChange={onChange} value={props.value} inputType={props.inputType[0]}/>\r\n            </div>\r\n            <div>\r\n                Password <Input onChange={onChange} value={props.value} inputType={props.inputType[1]}/>\r\n            </div>\r\n            <div>\r\n                <NavLink to={restore}>Forgot password?</NavLink>\r\n            </div>\r\n\r\n            {props.isAuth ? <NavLink to={profile}><Button  onClick={onClick} loading={props.loading}\r\n                                                           buttonType={props.buttonType} buttonName={props.buttonName}/></NavLink> :\r\n                <Button  onClick={onClick} loading={props.loading}\r\n                         buttonType={props.buttonType} buttonName={props.buttonName}/>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        buttonName: state.login.buttonName,\r\n        buttonType: state.login.buttonType[0],\r\n        loading: state.login.loading,\r\n        inputType: state.login.inputType,\r\n        value: state.login.value,\r\n        isAuth: state.login.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Login);","export const login = '/login';\r\nexport const registration = '/registration';\r\nexport const restore = '/restorePassword';\r\nexport const profile = '/profile';","import React from 'react';\r\nimport Button from \"../../../n1-main/m1-ui/u3-common/Button\";\r\nimport {AppStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {connect} from \"react-redux\";\r\nimport Input from \"../../../n1-main/m1-ui/u3-common/Input\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {profile} from \"../../../n1-main/m1-ui/u2-routes/routes\";\r\n\r\ntype mapStateToPropsType = {\r\n    buttonName: string\r\n    buttonType: string\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst Registration = (props: mapStateToPropsType) => {\r\n\r\n    const onClick = () => {\r\n\r\n    }\r\n\r\n    const onChange =() => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Your name <Input onChange={onChange} value={props.value} inputType={props.inputType[0]}/>\r\n            </div>\r\n            <div>\r\n                Your e-mail <Input onChange={onChange} value={props.value} inputType={props.inputType[0]}/>\r\n            </div>\r\n            <div>\r\n                Your password <Input onChange={onChange} value={props.value} inputType={props.inputType[1]}/>\r\n            </div>\r\n\r\n            {props.isAuth ? <NavLink to={profile}><Button  onClick={onClick} loading={props.loading}\r\n                                                           buttonType={props.buttonType} buttonName={props.buttonName}/></NavLink> :\r\n                <Button  onClick={onClick} loading={props.loading}\r\n                         buttonType={props.buttonType} buttonName={props.buttonName}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        buttonName: state.registration.buttonName,\r\n        buttonType: state.registration.buttonType[0],\r\n        loading: state.registration.loading,\r\n        inputType: state.registration.inputType,\r\n        value: state.registration.value,\r\n        isAuth: state.registration.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Registration);","import React from 'react';\r\nimport classes from \"./Header.module.css\"\r\nimport {HashRouter, NavLink, Route} from \"react-router-dom\";\r\nimport Login from \"../../../n2-features/f1-auth/a1-login/Login\";\r\nimport Registration from \"../../../n2-features/f1-auth/a2-registration/Registration\";\r\nimport {login, profile, registration} from \"../u2-routes/routes\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../m2-bll/store\";\r\nimport Profile from \"../../../n2-features/f1-auth/a4-profile/profile\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuthByLogin: boolean\r\n    isAuthByRestore: boolean\r\n    isAuthByRegistration: boolean\r\n}\r\n\r\n\r\nconst Header = (props: MapStateToPropsType) => {\r\n    const isAuth = props.isAuthByLogin || props.isAuthByRegistration || props.isAuthByRestore;\r\n    return (<div>\r\n            {!isAuth && <div className={classes.header}>\r\n\r\n                <NavLink to={login}> Sign in </NavLink> |\r\n                <NavLink to={registration}> Sign up </NavLink>\r\n            </div>\r\n            }\r\n\r\n            {/*{isAuth && <Profile/> }*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuthByLogin: state.login.isAuth,\r\n        isAuthByRestore: state.restore.isAuth,\r\n        isAuthByRegistration: state.registration.isAuth\r\n    }\r\n}\r\n\r\nexport default connect<MapStateToPropsType, {}, {}, AppStateType>(mapStateToProps, {})(Header);","import React from 'react';\r\nimport Button from \"../../../n1-main/m1-ui/u3-common/Button\";\r\nimport {AppStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {connect} from \"react-redux\";\r\nimport Input from \"../../../n1-main/m1-ui/u3-common/Input\";\r\nimport {login, profile} from \"../../../n1-main/m1-ui/u2-routes/routes\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    buttonName: string\r\n    buttonType: string\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst RestorePassword = (props: mapStateToPropsType) => {\r\n    const onClick = () => {\r\n\r\n    }\r\n\r\n    const onChange =() => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Enter your e-mail <Input onChange={onChange} value={props.value} inputType={props.inputType[0]}/>\r\n\r\n           <NavLink to={login}> <Button onClick={onClick} loading={props.loading}\r\n                                          buttonType={props.buttonType} buttonName={props.buttonName}/></NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        buttonName: state.restore.buttonName,\r\n        buttonType: state.restore.buttonType[0],\r\n        loading: state.restore.loading,\r\n        inputType: state.restore.inputType,\r\n        value: state.restore.value,\r\n        isAuth: state.restore.isAuth\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(RestorePassword);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport user from './user.png';\r\nimport classes from \"./profile.module.css\";\r\n\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    userId: string\r\n    userName: string\r\n}\r\n\r\nconst Profile = (props: MapStateToPropsType) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <img className={classes.avatar} alt='user' src={user}/> {props.userName}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        userId: state.profile.userId,\r\n        userName: state.profile.userName\r\n\r\n    }\r\n}\r\n\r\nexport default connect<MapStateToPropsType, {}, {}, AppStateType>(mapStateToProps, {})(Profile);","import React from 'react';\nimport './App.css';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Login from \"../../n2-features/f1-auth/a1-login/Login\";\nimport Registration from \"../../n2-features/f1-auth/a2-registration/Registration\";\nimport Header from \"./u1-header/Header\";\nimport {login, profile, registration, restore} from \"./u2-routes/routes\";\nimport Particles from 'react-particles-js';\nimport RestorePassword from \"../../n2-features/f1-auth/a3-restorePassword/RestorePassword\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../m2-bll/store\";\nimport Profile from \"../../n2-features/f1-auth/a4-profile/profile\";\n\n\n\ntype MapStateToPropsType = {\n    isAuthByLogin: boolean\n    isAuthByRestore: boolean\n    isAuthByRegistration: boolean\n}\n\nconst App = (props: MapStateToPropsType) => {\n    const particleOpts = {\n        \"particles\": {\n            \"number\": {\n                \"value\": 50,\n                \"density\": {\n                    \"enable\": true,\n                    \"value_area\": 800\n                }\n            },\n            \"color\": {\n                \"value\": \"#715858\"\n            },\n            \"line_linked\": {\n                \"enable\": true,\n                \"distance\": 150,\n                \"color\": \"#E6E6FA\",\n                \"opacity\": 0.4,\n                \"width\": 1\n            },\n            \"shape\": {\n                \"type\": \"circle\",\n                \"stroke\": {\n                    \"width\": 0,\n                    \"color\": \"#000000\"\n                },\n                \"polygon\": {\n                    \"nb_sides\": 5\n                },\n            },\n            \"size\": {\n                \"value\": 20,\n                \"random\": true,\n                \"anim\": {\n                    \"enable\": false,\n                    \"speed\": 40,\n                    \"size_min\": 0.1,\n                    \"sync\": false\n                }\n            }, \"interactivity\": {\n                \"detect_on\": \"canvas\",\n                \"events\": {\n                    \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                    },\n                    \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"push\"\n                    },\n                    \"resize\": true\n                },\n                \"modes\": {\n                    \"grab\": {\n                        \"distance\": 400,\n                        \"line_linked\": {\n                            \"opacity\": 1\n                        }\n                    },\n                    \"bubble\": {\n                        \"distance\": 400,\n                        \"size\": 40,\n                        \"duration\": 2,\n                        \"opacity\": 8,\n                        \"speed\": 3\n                    },\n                    \"repulse\": {\n                        \"distance\": 200\n                    },\n                    \"push\": {\n                        \"particles_nb\": 4\n                    },\n                    \"remove\": {\n                        \"particles_nb\": 2\n                    }\n                },\n                \"move\": {\n                    \"enable\": true,\n                    \"speed\": 6,\n                    \"direction\": \"none\",\n                    \"random\": false,\n                    \"straight\": false,\n                    \"out_mode\": \"out\",\n                    \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 1200\n                    }\n                }\n            }\n        }\n    }\n\n    const isAuth = props.isAuthByLogin || props.isAuthByRegistration || props.isAuthByRestore;\n\n    return (\n        <div className='App'>\n            <HashRouter>\n                <Particles className='particles' params={particleOpts}/>\n                <Header/>\n                <Route path={login} component={Login}/>\n                <Route path={registration} component={Registration}/>\n                <Route path={restore} component={RestorePassword}/>\n                <Route path={profile} component={Profile}/>\n\n\n                {!isAuth &&\n                <div className='main'>\n                    <span className='welcome'> Welcome to ANOX! </span>\n                    <div>\n                        Study different things with us!\n                    </div>\n                </div>\n                }\n\n\n\n\n            </HashRouter>\n        </div>\n\n\n    );\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        isAuthByLogin: state.login.isAuth,\n        isAuthByRestore: state.restore.isAuth,\n        isAuthByRegistration: state.registration.isAuth\n\n    }\n}\n\nexport default connect<MapStateToPropsType, {}, {}, AppStateType>(mapStateToProps, {})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\ntype initialStateType = {\r\n    buttonName: string\r\n    buttonType: Array<string>\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    buttonName: 'Sign in',\r\n    buttonType: ['primary', 'danger'],\r\n    loading: false,\r\n    inputType: ['text', 'password'],\r\n    isAuth: false\r\n}\r\n\r\nconst LoginReducer = (state: initialStateType = initialState, action : any) => {\r\n    return state;\r\n}\r\n\r\nexport default LoginReducer;","type initialStateType = {\r\n    buttonName: string\r\n    buttonType: Array<string>\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    buttonName: 'Sign up',\r\n    buttonType: ['primary', 'danger'],\r\n    loading: false,\r\n    inputType: ['text', 'password'],\r\n    isAuth: false\r\n}\r\n\r\nconst RegisterReducer = (state: initialStateType = initialState, action : any) => {\r\n    return state;\r\n}\r\n\r\nexport default RegisterReducer;","\r\ntype initialStateType = {\r\n    buttonName: string\r\n    buttonType: Array<string>\r\n    loading: boolean\r\n    inputType: Array<string>\r\n    value?: string\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    buttonName: 'Send password',\r\n    buttonType: ['primary', 'danger'],\r\n    loading: false,\r\n    inputType: ['text', 'password'],\r\n    isAuth: false\r\n}\r\n\r\nconst RestorePasswordReducer = (state: initialStateType = initialState, action : any) => {\r\n    return state;\r\n}\r\n\r\nexport default RestorePasswordReducer;","\r\ntype initialStateType = {\r\n    userId: string\r\n    userName: string\r\n\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    userId: '1',\r\n    userName: 'Oxana'\r\n}\r\n\r\nconst ProfileReducer = (state: initialStateType = initialState, action : any) => {\r\n    return state;\r\n}\r\n\r\nexport default ProfileReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport LoginReducer from \"./LoginReducer\";\r\nimport RegisterReducer from \"./RegisterReducer\";\r\nimport RestorePasswordReducer from \"./RestorePasswordReducer\";\r\nimport ProfileReducer from \"./ProfileReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: LoginReducer,\r\n    registration: RegisterReducer,\r\n    restore: RestorePasswordReducer,\r\n    profile: ProfileReducer\r\n})\r\n\r\n\r\nconst store = createStore(reducers);\r\n\r\n\r\ntype RootReducersType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducersType>;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./n1-main/m2-bll/store\";\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Bcrf\"};","module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"profile_avatar__ikWHI\"};"],"sourceRoot":""}